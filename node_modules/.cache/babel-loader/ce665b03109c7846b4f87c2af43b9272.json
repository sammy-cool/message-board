{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Desktop/message-board/src/component/MessageItem.js\";\nimport React from 'react'; // npm install prop-types  \n\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass MessageItem extends React.Component {\n  constructor(props) {\n    // to copy prop value into the state while creating component\n    super(props);\n\n    this.handleRemove = () => {\n      const id = this.props.id;\n      this.props.removeMessage(id);\n    };\n\n    this.handleEdit = () => {\n      // method responsible for toggle between text and form \n      this.setState(prevState => {\n        return {\n          editStatus: !prevState.editStatus\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formData = {\n        body: this.state.body\n      };\n      this.props.updateMessage(this.props.id, formData);\n      this.setState(prevState => {\n        return {\n          editStatus: !prevState.editStatus\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      editStatus: false,\n      // state value used to do toggle on the screen\n      body: props.body // to prefill values inside the form\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.editStatus ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.body,\n      onChange: this.handleChange,\n      name: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }), \" or \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 75\n      }\n    }, \"cancel\"))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \" \", this.props.body, \" - \", moment(this.props.createdAt).fromNow()), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"remove\"), !this.state.editStatus && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 44\n      }\n    }, \"edit\"));\n  }\n\n}\n\nMessageItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired\n};\nexport default MessageItem;","map":{"version":3,"sources":["/home/priyanshu/Desktop/message-board/src/component/MessageItem.js"],"names":["React","PropTypes","moment","MessageItem","Component","constructor","props","handleRemove","id","removeMessage","handleEdit","setState","prevState","editStatus","handleSubmit","e","preventDefault","formData","body","state","updateMessage","handleChange","target","name","value","render","createdAt","fromNow","propTypes","number","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react'\n// npm install prop-types  \nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\nclass MessageItem extends React.Component {\n    constructor(props) { // to copy prop value into the state while creating component\n        super(props)\n        this.state = { \n            editStatus: false, // state value used to do toggle on the screen\n            body: props.body // to prefill values inside the form\n        }\n    }\n\n    handleRemove = () => {\n        const id = this.props.id \n        this.props.removeMessage(id)\n    }\n\n    handleEdit = () => { // method responsible for toggle between text and form \n        this.setState((prevState) => {\n            return {\n                editStatus: !prevState.editStatus\n            }\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault() \n        const formData = {\n            body: this.state.body \n        }\n        this.props.updateMessage(this.props.id, formData)\n\n        this.setState((prevState) => {\n            return {\n                editStatus: !prevState.editStatus\n            }\n        })\n    }\n\n    handleChange = (e) => { \n        this.setState({\n            [e.target.name]: e.target.value \n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.editStatus ? (\n                        <div>\n                            <form onSubmit={this.handleSubmit}>\n                                <textarea \n                                    value={this.state.body}\n                                    onChange={this.handleChange}\n                                    name=\"body\"\n                                ></textarea>\n                                <input type=\"submit\" value=\"update\" /> or <button onClick={this.handleEdit}>cancel</button>\n                            </form> \n                            \n                        </div> \n                    ) : <p> {this.props.body} - {moment(this.props.createdAt).fromNow()}</p>\n                }\n                \n                <button onClick={this.handleRemove}>remove</button>\n\n\n                {!this.state.editStatus && <button onClick={this.handleEdit}>edit</button> }\n                \n            </div>\n        )\n    }\n}\n\nMessageItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired\n}\n\nexport default MessageItem"]},"metadata":{},"sourceType":"module"}